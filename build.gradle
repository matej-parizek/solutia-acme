plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.sonarqube' version '4.0.0.2929'
	id 'jacoco'
}

group = 'cz.solutia'
version = '0.1.0-SNAPSHOT'

processResources {
	filesMatching('application.properties') {
		expand(project.properties)
	}

	filesMatching('banner.txt') {
		expand(project.properties)
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

bootJar {
	archiveBaseName.set('acme')
	archiveVersion.set('')
	archiveClassifier.set('')
	mainClass = 'cz.solutia.acme.AcmeApplication'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.transferwise:spring-icu:0.3.0'
	implementation 'org.liquibase:liquibase-core'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springframework.session:spring-session-core'
    implementation 'org.passay:passay:1.6.6'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}